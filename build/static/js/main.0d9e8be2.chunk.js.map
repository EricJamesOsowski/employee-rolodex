{"version":3,"sources":["utils/API.js","components/table.js","App.js","index.js"],"names":["API","getEmployees","fetch","Table","useState","employees","setEmployees","React","searchTerm","setSearchTerm","searchResults","setSearchResults","searchFlags","setSearchFlags","isInitialMount","useRef","sortEmployeesBy","searchParameter","searchValueA","searchValueB","sortedSearchResults","sortDirection","sort","a","b","name","first","email","reverse","useEffect","current","then","response","json","receivedData","results","filter","person","toLowerCase","includes","last","type","placeholder","value","onChange","event","target","className","scope","onClick","map","result","index","src","picture","medium","alt","cell","App","ReactDOM","render","document","getElementById"],"mappings":"4OAOeA,G,MANH,CACVC,aAAc,WACZ,OAAOC,MAAM,mDC2HFC,MA1Hf,WAAkB,IAAD,EACmBC,mBAAS,IAD5B,mBACRC,EADQ,KACGC,EADH,OAEqBC,IAAMH,SAAS,IAFpC,mBAERI,EAFQ,KAEIC,EAFJ,OAG2BF,IAAMH,SAAS,IAH1C,mBAGRM,EAHQ,KAGOC,EAHP,OAIuBP,mBAAS,CAAE,cAAc,EAAM,OAAS,IAJ/D,mBAIRQ,EAJQ,KAIKC,EAJL,KAuBTC,EAAiBP,IAAMQ,QAAO,GA0BrC,SAASC,EAAgBC,GACvB,IAAIC,EACAC,EACCC,EAAmB,YAAOV,GAC1BW,GAAgB,EACpBD,EAAoBE,MAAK,SAACC,EAAGC,GAiB5B,MAfwB,cAAnBP,GAEFC,EAAeK,EAAEE,KAAKC,MACtBP,EAAeK,EAAEC,KAAKC,MACtBb,GAAe,SAAAD,GAAW,kCAAUA,GAAV,IAAuB,cAAeA,EAAY,mBAC5ES,EAAgBT,EAAY,eAEF,SAAnBK,IAEPC,EAAeK,EAAEI,MACjBR,EAAeK,EAAEG,MACjBd,GAAe,SAAAD,GAAW,kCAAUA,GAAV,IAAuB,OAAUA,EAAW,WACtES,EAAgBT,EAAW,OAG1BM,EAAeC,GACV,EAEND,EAAeC,EACV,EAEF,KAIPR,EADEU,EACeD,EAGCA,EAAoBQ,WAI1C,OAhEEC,qBAAU,WACJf,EAAegB,UAZnB9B,EAAIC,eACD8B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ5B,EAAa4B,EAAaC,SAC1BxB,EAAiBuB,EAAaC,YAUhCrB,EAAegB,SAAU,GAE3B,IAAMK,EAAU9B,EAAU+B,QAAO,SAAAC,GAAM,OACrCA,EAAOZ,KAAKC,MAAMY,cAAcC,SAAS/B,IAAe6B,EAAOZ,KAAKe,KAAKF,cAAcC,SAAS/B,IAAe6B,EAAOV,MAAMW,cAAcC,SAAS/B,MAGrJG,EAAiBwB,KAChB,CAAC3B,IAIqB,YAAOH,GACViB,MAAK,SAACC,EAAGC,GAC7B,OAAID,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,OAChB,EAENH,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,MACjB,EAEF,KA2CT,gCACE,uBACEe,KAAK,OACLC,YAAY,SACZC,MAAOnC,EACPoC,SAxFiB,SAAAC,GACnBpC,EAAcoC,EAAMC,OAAOH,UAyF3B,wBAAOI,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMC,QAAS,kBAAMjC,EAAgB,eAA/C,kBACA,oBAAIgC,MAAM,MAAMC,QAAS,kBAAMjC,EAAgB,UAA/C,mBACA,oBAAIgC,MAAM,MAAV,wBAGJ,gCACGtC,EAAgBA,EAAcwC,KAAI,SAACC,EAAQC,GAC1C,OACE,+BACE,6BAAI,qBAAKC,IAAKF,EAAOG,QAAQC,OAAQC,IAAI,eACzC,+BAAKL,EAAO1B,KAAKC,MAAjB,IAAyByB,EAAO1B,KAAKe,QACrC,6BAAKW,EAAOxB,QACZ,6BAAKwB,EAAOM,SAJLL,MAOR,cC3GEM,MATf,WAEE,OACA,8BACA,cAAC,EAAD,O,YCDFC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0d9e8be2.chunk.js","sourcesContent":["// Export an object with a \"search\" method that searches for random users for the passed query\nconst API = {\n  getEmployees: function () {\n    return fetch(\"https://randomuser.me/api/?results=10&nat=us\")\n  }\n};\n\nexport default API;","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport API from \"../utils/API\";\n\nfunction Table() {\n  const [employees, setEmployees] = useState([]);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [searchFlags, setSearchFlags] = useState({ \"name.first\": true, \"email\": true });\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n\n  // This is HOW the employee data is being populated\n  const loadData = () => {\n    API.getEmployees()\n      .then(response => response.json())\n      .then(receivedData => {\n        setEmployees(receivedData.results)\n        setSearchResults(receivedData.results);\n      })\n  }\n\n  // This is WHERE the employees get populated\n  // Re renders the table any time the search term changes, \n  const isInitialMount = React.useRef(true);\n  useEffect(() => {\n    if (isInitialMount.current) {\n      loadData();\n      isInitialMount.current = false;\n    }\n    const results = employees.filter(person =>\n      person.name.first.toLowerCase().includes(searchTerm) || person.name.last.toLowerCase().includes(searchTerm) || person.email.toLowerCase().includes(searchTerm)\n\n    );\n    setSearchResults(results);\n  }, [searchTerm]);\n\n\n  // Sorts employees by first name ascending\n  let employeesSortedByName = [...employees];\n  employeesSortedByName.sort((a, b) => {\n    if (a.name.first < b.name.first) {\n      return -1;\n    }\n    if (a.name.first > b.name.first) {\n      return 1;\n    }\n    return 0;\n  });\n\n function sortEmployeesBy(searchParameter){\n   let searchValueA;\n   let searchValueB;\n    let sortedSearchResults = [...searchResults]\n    let sortDirection = true;\n    sortedSearchResults.sort((a, b) => {\n\n      if (searchParameter == \"name.first\")\n      {\n        searchValueA = a.name.first;\n        searchValueB = b.name.first;\n        setSearchFlags(searchFlags => ({ ...searchFlags, \"name.first\": !searchFlags[\"name.first\"]}))\n        sortDirection = searchFlags[\"name.first\"];\n      }\n      else if (searchParameter == \"email\")\n      {\n        searchValueA = a.email;\n        searchValueB = b.email;\n        setSearchFlags(searchFlags => ({ ...searchFlags, \"email\": !searchFlags[\"email\"]}))\n        sortDirection = searchFlags[\"email\"];\n      }\n\n     if (searchValueA < searchValueB) {\n      return -1;\n    }\n    if (searchValueA > searchValueB) {\n      return 1;\n    }\n    return 0;\n  },\n  );\n  if (sortDirection) {\n    setSearchResults(sortedSearchResults);\n  }\n  else {\n     setSearchResults(sortedSearchResults.reverse());\n  }\n}\n\nreturn (\n  <div>\n    <input\n      type=\"text\"\n      placeholder=\"Search\"\n      value={searchTerm}\n      onChange={handleChange}\n    />\n    <table className=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Photo</th>\n          <th scope=\"col\" onClick={() => sortEmployeesBy(\"name.first\")}>Name</th>\n          <th scope=\"col\" onClick={() => sortEmployeesBy(\"email\")}>Email</th>\n          <th scope=\"col\">Phone</th>\n        </tr>\n      </thead>\n      <tbody>\n        {searchResults ? searchResults.map((result, index) => {\n          return (\n            <tr key={index}>\n              <td><img src={result.picture.medium} alt=\"Employee\" /></td>\n              <td>{result.name.first} {result.name.last}</td>\n              <td>{result.email}</td>\n              <td>{result.cell}</td>\n            </tr>\n          )\n        }) : null}\n      </tbody>\n    </table>\n  </div>\n)\n}\n\nexport default Table;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"./components/table\";\n\nfunction App() {\n\n  return (\n  <div>\n  <Table />\n  </div>\n  )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}